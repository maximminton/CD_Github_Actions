name: CD_Github_Actions

# Controls when the workflow will run
on:
  push: # Trigger on push events to any branch
    branches:
      - main 
  workflow_dispatch: # Allow manual triggering from the Actions tab

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-and-test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest 

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Step 1: Clone the project
      - name: Checkout repository
        uses: actions/checkout@v4 

      # Step 2: Install the software 
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10' 

      # Step 3: Download dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
         
      # Step 4: Create a project build
      - name: Build project (placeholder)
        run: echo "No build step needed for this example, or add your build command here."

      # Step 5: Run unit tests
      - name: Run unit tests
        run: |
          echo "Running tests..."
          pytest
          echo "Tests finished." 

      # Step 6: Update the project code in the repository & Verify
      - name: Update code and verify execution
        run: |
          echo "Workflow executed at $(date)" > workflow_run_timestamp.txt
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add workflow_run_timestamp.txt
          # Check if there are changes to commit before committing/pushing
          if ! git diff --staged --quiet; then
            git commit -m "CI: Add/Update workflow execution timestamp [skip ci]" 
            git pull --rebase origin main || (git checkout --ours workflow_run_timestamp.txt && git add workflow_run_timestamp.txt && git rebase --continue)
            git push # Pushes back to the branch that triggered the workflow
          else
            echo "No changes to commit regarding timestamp."
          fi
